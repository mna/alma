local inspect = require('inspect')
return describe('math_type', function()
  local math_type
  setup(function()
    math_type = require('alma.compat').math_type
  end)
  it('is nil for nil', function()
    return assert.is_nil(math_type(nil))
  end)
  it('is integer for 0', function()
    return assert.equal('integer', math_type(0))
  end)
  it('is integer for 1', function()
    return assert.equal('integer', math_type(1))
  end)
  it('is integer for -1', function()
    return assert.equal('integer', math_type(-1))
  end)
  it('is integer for 123', function()
    return assert.equal('integer', math_type(123))
  end)
  it('is integer for -456', function()
    return assert.equal('integer', math_type(-456))
  end)
  it('is float for 1.1', function()
    return assert.equal('float', math_type(1.1))
  end)
  it('is float for -1.1', function()
    return assert.equal('float', math_type(-1.1))
  end)
  it('is float for 3.1415', function()
    return assert.equal('float', math_type(3.1415))
  end)
  return it('is float for -3.567', function()
    return assert.equal('float', math_type(-3.567))
  end)
end)
